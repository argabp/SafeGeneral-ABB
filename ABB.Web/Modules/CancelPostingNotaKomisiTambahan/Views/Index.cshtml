@using ABB.Application.CancelPostingNotaKomisiTambahans.Queries
@using Kendo.Mvc.UI
@using Kendo.Mvc.TagHelpers
@using Microsoft.Extensions.Configuration
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Kendo.Mvc

@inject IConfiguration Configuration

@{
    Layout = "~/Modules/Shared/_Layout.cshtml";
    ViewData["Title"] = "Cancel Posting Nota Komisi Tambahan";
}
<script src="~/Modules/CancelPostingNotaKomisiTambahan/JS/cancelPostingNotaKomisiTambahan.js"></script>

<style>
    .div-box{
        padding-bottom: 1em;
    }
</style>
<div class="flat-box">
    <div class="row">
        <div class="flat-box-title col-md-10">
            Cancel Posting Nota Komisi Tambahan
        </div>

        <div class="col-md-2">
                <button class="flat-btn-primary" onclick="cancelPolis()">Cancel</button>
        </div>
    </div>

    <div class="flat-box-content">
        <div class="div-box">
            @(Html.Kendo().Grid<CancelPostingNotaKomisiTambahanDto>()
                .Name("CancelPostingNotaKomisiTambahanGrid")
                .DataSource(dataSource => dataSource.Ajax()
                    .Read(read => read.Action("GetCancelPolicies", "CancelPostingNotaKomisiTambahan").Data("searchFilter"))
                    .Model(model => model.Id(p => new { p.kd_cb, p.kd_cob, p.kd_scob, p.kd_thn, p.no_pol, p.no_updt }))
                )
                .Columns(columns =>
                {
                    columns.Select().Width(50);
                    columns.Bound(col => col.nm_cb).Width(150).Title("Nama Cabang");
                    columns.Bound(col => col.nm_cob).Width(150).Title("Nama COB");
                    columns.Bound(col => col.nm_scob).Width(150).Title("Nama Sub COB");
                    columns.Bound(col => col.no_pol_ttg).Width(200).Title("Nomor Polis").ClientTemplate("#= formatNoPol(no_pol_ttg) #");
                    columns.Bound(col => col.no_updt).Width(150).Title("Nomor Update");
                    columns.Bound(col => col.nm_ttj).Width(200).Title("Nama Tertuju");
                    columns.Bound(col => col.tgl_mul_ptg).Width(150).Title("Tanggal Mulai").Format("{0: dd-MM-yyyy}");
                    columns.Bound(col => col.tgl_akh_ptg).Width(150).Title("Tanggal Akhir").Format("{0: dd-MM-yyyy}");
                    columns.Bound(col => col.tgl_closing).Width(150).Title("Tanggal Closing").Format("{0: dd-MM-yyyy}");
                })
                .Pageable(pager => pager
                    .Refresh(true)
                    .Info(true)
                    .PageSizes(true)
                )
                .PersistSelection()
                .Sortable()
                .Filterable()
                .Scrollable()
                .Height(450)
                .Resizable(a=>a.Columns(true))
                .Events(ev => ev.DataBound("gridAutoFit")))
        </div>
    </div>
</div>

<script>
    function formatNoPol(value) {
        if (!value) return "";

        value = value.toString();

        // Ensure the string is long enough
        if (value.length < 16) return value;

        return value.substring(0, 2) + '.' +
               value.substring(2, 5) + '.' +
               value.substring(5, 7) + '.' +
               value.substring(7, 11) + '.' +
               value.substring(11, 15) + '-' +
               value.substring(15);
    }
</script>
