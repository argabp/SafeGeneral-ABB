@using Kendo.Mvc.UI
@using Kendo.Mvc.TagHelpers
<!-- @using ABB.Application.EntriPembayaranKass.Queries -->
@using ABB.Application.VoucherBanks.Queries
@using Microsoft.Extensions.Configuration
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Kendo.Mvc

@inject IConfiguration Configuration

@{
    Layout = "~/Modules/Shared/_Layout.cshtml";
    ViewData["Title"] = "Entri Pembayaran Bank";
}

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://unpkg.com/paper-css@0.4.1/paper.css">
<script src="~/Modules/EntriPembayaranBank/JS/entripembayaranbank.index.js"></script>
<style>
    .div-box{
        padding-bottom: 1em;
    }
    .swal2-container {
      z-index: 10050 !important;
    }
</style>

<div class="flat-box">
        <div class="flat-box-title ">
           Entri Pembayaran Bank
            <div class="pullright-flex">
            <input type="text" class="search-field-top " id="SearchKeyword" placeholder="Search"/>
      
            <!-- <button class="flat-btn-primary" onclick="btnAddVoucherKas_OnClick()">Entri Voucher Kas</button> -->
        </div>
    </div>

    <div class="flat-box-content">
        <div class="div-box">
             @(Html.Kendo().Grid<VoucherBankDto>()
                .Name("EntriPembayaranBankGrid")
                .DataSource(dataSource => dataSource.Ajax()
                    .Read(read => read.Action("GetEntriPembayaranBank", "EntriPembayaranBank").Data("getSearchFilter")) // Arahkan ke action yang baru dibuat
                    .Model(model => model.Id(p => p.KodeCabang)) // Primary Key
                )
                .Columns(columns =>
                {
                    columns.Bound(col => col.KodeCabang).Width(150).Title("Kode Cabang");
                    columns.Bound(col => col.JenisVoucher).Width(150).Title("Jenis Voucher");
                    columns.Bound(col => col.NoVoucher).Width(200).Title("No. Voucher");
                     columns.Bound(col => col.DebetKredit).Width(200).Title("Debit/ Kredit");
                    columns.Bound(col => col.DiterimaDari).Width(250).Title("Diterima Dari");
                    columns.Bound(col => col.TanggalVoucher).Format("{0:dd-MM-yyyy}").Width(150).Title("Tanggal Voucher");
                     columns.Bound(col => col.KeteranganVoucher).Width(300).Title("Keterangan");
                    columns.Bound(col => col.TotalVoucher).Width(150).Title("Total Voucher");
                    columns.Bound(col => col.FlagPosting).Title("Posting").Width(100)
                    .ClientTemplate("#= FlagPosting ? '<i class=\"fa fa-check text-success\"></i> Yes' : '<i class=\"fa fa-times text-danger\"></i> No' #");
                     columns.Command(command =>
                    {
                        command.Custom("EntriPembayaran") // Nama command diubah
                            .Text("Edit Pembayaran")
                            .IconClass("fa fa-plus")
                            .Click("btnEntriPembayaran_OnClick"); // Fungsi JS diubah
                        command.Custom("CetakPembayaranBank") // Nama command diubah
                            .Text(" Cetak Pembayaran")
                            .IconClass("fa fa-print")
                            .Click("btnCetakPembayaranBank_OnClick");
                      
                    }).Width(200).Title("Action").Locked(true);
                })
                .Pageable(pager => pager.Refresh(true))
                .Sortable()
                .Filterable()
                .Scrollable()
                .Height(450)
                .Resizable(a=>a.Columns(true))
            )
        </div>

        @(Html.Kendo().Window()
            .Name("EntriPembayaranBankWindow")
            .Title("EntriPembayaranBank")
            .Width(1000)
            .Modal(true)
            .Visible(false)
            .Draggable(true)
        )

    </div>
</div>

